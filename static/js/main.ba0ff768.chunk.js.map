{"version":3,"sources":["components/PhoneForm/PhoneForm.jsx","components/PhoneList/PhoneList.jsx","App.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handlSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","id","requiredvalue","Component","PhoneList","contacts","map","contact","App","formSubmitHandler","data","addContact","numder","PhoneForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,YAAc,SAAAJ,GACZA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAEpC,WACE,OACE,uBAAMa,SAAUE,KAAKL,YAArB,UACE,wBAAOM,QAASD,KAAKd,YAArB,iBAEE,uBACEgB,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUN,KAAKV,aACfG,MAAOO,KAAKjB,MAAMC,KAClBuB,GAAIP,KAAKd,iBAGb,wBAAOe,QAASD,KAAKX,cAArB,mBAEE,uBACEa,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,+FACNI,cAAeR,KAAKjB,MAAME,OAC1BqB,SAAUN,KAAKV,aACfiB,GAAIP,KAAKX,mBAGb,wBAAQa,KAAK,SAAb,gC,GAnDWO,aAwDJ3B,IC/CA4B,MAZf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,6BACGA,EAASC,KAAI,SAAAC,GAAO,OACnB,+BACGA,EAAQ7B,KADX,MACoB6B,EAAQ5B,SADnB4B,EAAQN,UCCnBO,E,4MACJ/B,MAAQ,CACN4B,SAAU,I,EAEZI,kBAAoB,SAAAC,GAClB,IAAQL,EAAa,EAAK5B,MAAlB4B,SACFM,EAAa,CAAEV,GAAIpB,IAAQC,WAAYJ,KAAMgC,EAAKhC,KAAMkC,OAAQF,EAAKE,QAC3E,EAAKxB,SAAS,CAAEiB,SAAS,GAAD,mBAAMA,GAAN,CAAgBM,O,4CAG1C,WACE,OACE,qCACE,cAACE,EAAD,CAAWrB,SAAUE,KAAKe,oBAC1B,cAAC,EAAD,CAAWJ,SAAUX,KAAKjB,MAAM4B,kB,GAdtBF,aAmBHK,I,MCnBfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba0ff768.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handlSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handlSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            requiredvalue={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","function PhoneList({ contacts }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name} : {contact.number}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default PhoneList;\r\n","import React, { Component } from 'react';\nimport PhoneForm from './components/PhoneForm';\nimport PhoneList from './components/PhoneList';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n  };\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    const addContact = { id: shortid.generate(), name: data.name, numder: data.numder };\n    this.setState({ contacts: [...contacts, addContact] });\n  };\n\n  render() {\n    return (\n      <>\n        <PhoneForm onSubmit={this.formSubmitHandler}></PhoneForm>\n        <PhoneList contacts={this.state.contacts} />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}