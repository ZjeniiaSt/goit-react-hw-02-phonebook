{"version":3,"sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContainerStyle","styled","div","ContainerTitle","h1","Container","title","children","Form","form","FormInput","input","FormLabel","label","AddButton","button","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","required","onChange","id","nameInputId","numberInputId","Component","FilterInput","FilterLabel","Filter","ContactsRoster","ul","ContactsData","li","ContactNumber","span","ContactDelete","ContactList","contacts","onDelete","map","contact","onClick","App","filter","formSubmitHandler","data","newContact","shortid","generate","find","alert","prevState","changeFilter","getFindContact","normalizedFilter","toLowerCase","includes","deleteContact","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec191f6c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ContainerStyle = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport const ContainerTitle = styled.h1`\r\n  color: rgb(255, 255, 255);\r\n  width: 200px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { ContainerStyle, ContainerTitle } from './Container.styled';\r\n\r\nfunction Container({ title, children }) {\r\n  return (\r\n    <ContainerStyle>\r\n      <ContainerTitle>{title}</ContainerTitle> {children}\r\n    </ContainerStyle>\r\n  );\r\n}\r\n\r\nexport default Container;\r\nContainer.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.arrayOf(PropTypes.element.isRequired).isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  width: 300px;\r\n  border-radius: 8px;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  display: block;\r\n  width: 280px;\r\n  height: 40px;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 0 0 0 20px;\r\n  font-weight: 700;\r\n  background: rgb(28, 30, 33);\r\n  box-shadow: inset -100px -100px 0 rgb(28, 30, 33);\r\n  color: rgb(255, 255, 255);\r\n  margin-bottom: 20px;\r\n  margin-top: 4px;\r\n  border-radius: 8px;\r\n  &:-webkit-autofill {\r\n    -webkit-box-shadow: inset -100px -100px 0 rgb(28, 30, 33);\r\n    -webkit-text-fill-color: rgb(255, 255, 255);\r\n    -webkit-background: rgb(28, 30, 33);\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  font-weight: 700;\r\n  color: rgb(255, 255, 255);\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  display: block;\r\n  color: rgb(52, 56, 61);\r\n  border-radius: 28px;\r\n  outline: 0;\r\n  border: 6px solid rgb(52, 56, 61);\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  color: #000;\r\n  background: rgb(28, 30, 33);\r\n  padding: 7px 20px 7px 20px;\r\n  margin-bottom: 60px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: rgb(255, 255, 255);\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BsPersonCircle } from 'react-icons/bs';\r\nimport { BsFillTelephoneFill } from 'react-icons/bs';\r\nimport { Form, FormInput, FormLabel, AddButton } from './ContactForm.styled';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormLabel>\r\n          <BsPersonCircle /> Name\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            id={this.nameInputId}\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <BsFillTelephoneFill /> Number\r\n          <FormInput\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </FormLabel>\r\n        <AddButton type=\"submit\">Add contact</AddButton>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FilterInput = styled.input`\r\n  display: block;\r\n  width: 300px;\r\n  height: 40px;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 0 0 0 20px;\r\n  font-weight: 700;\r\n  background: rgb(28, 30, 33);\r\n  box-shadow: inset -100px -100px 0 rgb(28, 30, 33);\r\n  color: rgb(255, 255, 255);\r\n  margin-bottom: 20px;\r\n  margin-top: 4px;\r\n  border-radius: 8px;\r\n  &:-webkit-autofill {\r\n    -webkit-box-shadow: inset -100px -100px 0 rgb(28, 30, 33);\r\n    -webkit-text-fill-color: rgb(255, 255, 255);\r\n    -webkit-background: rgb(28, 30, 33);\r\n`;\r\n\r\nexport const FilterLabel = styled.label`\r\n  font-weight: 700;\r\n  color: rgb(255, 255, 255);\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport { FilterInput, FilterLabel } from './Filter.styled';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <FilterLabel>\r\n      <BsSearch /> Find contacts by name\r\n      <FilterInput type=\"text\" name=\"name\" value={value} onChange={onChange}></FilterInput>\r\n    </FilterLabel>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsRoster = styled.ul`\r\n  color: #c5c5c5;\r\n  width: 350px;\r\n`;\r\n\r\nexport const ContactsData = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 4px;\r\n  font-weight: 700;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ContactNumber = styled.span`\r\n  padding-left: 20px;\r\n  color: #848482;\r\n`;\r\n\r\nexport const ContactDelete = styled.button`\r\n  color: rgb(52, 56, 61);\r\n  border-radius: 28px;\r\n  border: 6px solid rgb(52, 56, 61);\r\n  cursor: pointer;\r\n  color: #000;\r\n  background: rgb(28, 30, 33);\r\n  padding: 7px 20px 7px 20px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: rgb(255, 255, 255);\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { BsTrashFill } from 'react-icons/bs';\r\nimport { ContactsRoster, ContactsData, ContactNumber, ContactDelete } from './ContactList.styled';\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ContactsRoster>\r\n      {contacts.map(contact => (\r\n        <ContactsData key={contact.id}>\r\n          <span>\r\n            {contact.name}: <ContactNumber>{contact.number}</ContactNumber>\r\n          </span>\r\n          <ContactDelete type=\"button\" onClick={() => onDelete(contact.id)}>\r\n            <BsTrashFill />\r\n          </ContactDelete>\r\n        </ContactsData>\r\n      ))}\r\n    </ContactsRoster>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    const newContact = { id: shortid.generate(), name: data.name, number: data.number };\n    if (\n      contacts.find(\n        contact => contact.name === newContact.name || contact.number === newContact.number,\n      )\n    ) {\n      return alert(`${newContact.name} is already in contacts!`);\n    }\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, newContact] };\n    });\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getFindContact = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getFindContact();\n    return (\n      <>\n        <Container title=\"Phonebook\">\n          <ContactForm onSubmit={this.formSubmitHandler}></ContactForm>\n          <Filter value={this.state.filter} onChange={this.changeFilter}></Filter>\n          <ContactList contacts={visibleContacts} onDelete={this.deleteContact} />\n        </Container>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}